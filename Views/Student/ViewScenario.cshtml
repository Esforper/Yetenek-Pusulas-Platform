@* Views/Student/ViewScenario.cshtml *@
@model YetenekPusulasi.Core.Interfaces.Entities.IScenario
@{
    ViewData["Title"] = Model.Title;
}

<h4>Senaryo: @Model.Title</h4>
<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">Senaryo Türü</dt>
        <dd class="col-sm-10">@Model.Type.ToString()</dd>

        <dt class="col-sm-2">Açıklama</dt>
        <dd class="col-sm-10">
            @* Eğer Strategy deseni ile HTML geliyorsa: @Html.Raw(ViewBag.ScenarioDisplayHtml) *@
            @* Şimdilik basitçe açıklamayı gösterelim *@
            <p>@Model.Description</p>
        </dd>
    </dl>
</div>

@* --- CEVAP YAZMA ALANI BURAYA GELECEK (SONRAKİ ADIM) --- *@
<div class="mt-4 card">
    <div class="card-header">
        Cevabınız
    </div>
    <div class="card-body">
        <form asp-action="SubmitAnswer" asp-controller="Student" method="post"> @* SubmitAnswer action'ı sonra eklenecek *@
            <input type="hidden" name="scenarioId" value="@Model.Id" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <textarea name="answerText" class="form-control" rows="8" placeholder="Senaryoya cevabınızı buraya yazınız..."></textarea>
                @* Validation mesajı için span eklenebilir *@
            </div>
            <button type="submit" class="btn btn-primary" disabled>Cevabı Gönder (Henüz Aktif Değil)</button>
        </form>
    </div>
</div>
@* --- CEVAP YAZMA ALANI BİTTİ --- *@


<div class="mt-3">
    @* Geri dönülecek sınıfın senaryo listesine link. ClassroomId'yi ViewBag veya ViewData ile taşımak gerekebilir. *@
    @* Veya bir önceki sayfaya dönme (javascript:history.back()) *@
    <a asp-action="ViewClassroomScenarios" asp-route-classroomId="@Model.ClassroomId" class="btn btn-outline-secondary">Sınıf Senaryolarına Geri Dön</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}