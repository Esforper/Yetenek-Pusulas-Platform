@model YetenekPusulasi.WebApp.Models.StudentViewModels.ViewScenarioViewModel
@{
    ViewData["Title"] = Model.Scenario.Title;
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h1 class="h3 mb-2">
                                <i class="bi bi-journal-text me-2"></i>@Model.Scenario.Title
                            </h1>
                            @if (Model.Scenario.WasInitialPromptAIGenerated)
                            {
                                <small class="text-muted">
                                    <i class="bi bi-cpu me-1"></i>Bu başlangıç metni yapay zeka tarafından sizin için özel olarak oluşturulmuştur
                                </small>
                            }
                        </div>
                        <a asp-action="ViewClassroomScenarios" asp-route-classroomId="@Model.Scenario.ClassroomId" 
                           class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left me-1"></i>Sınıfa Dön
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(Model.Scenario.InitialPrompt))
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-lightbulb me-2"></i>Başlangıç
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@Html.Raw(Model.Scenario.InitialPrompt.Replace("\n", "<br />"))</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-info-circle me-2"></i>Senaryo Detayları
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row mb-0">
                                <dt class="col-sm-4">Senaryo Türü</dt>
                                <dd class="col-sm-8">
                                    <span class="badge bg-info text-dark">
                                        <i class="bi bi-tag me-1"></i>@Model.Scenario.Type.ToString()
                                    </span>
                                </dd>
                            </dl>
                        </div>
                    </div>
                    <hr>
                    <h6 class="mb-3">Senaryo Açıklaması</h6>
                    <p class="card-text">@Model.Scenario.Description</p>
                </div>
            </div>
        </div>
    </div>

    @if (Model.StudentAnswers.Any())
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header bg-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-chat-square-text me-2"></i>Verdiğiniz Cevaplar
                        </h5>
                    </div>
                    <div class="card-body">
                        @foreach (var answer in Model.StudentAnswers.OrderByDescending(a => a.SubmissionDate))
                        {
                            <div class="card mb-3 border-0 bg-light">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <h6 class="card-subtitle text-muted">
                                            <i class="bi bi-clock me-1"></i>@answer.SubmissionDate.ToString("g")
                                        </h6>
                                        @if (answer.AnalysisResult != null)
                                        {
                                            if (!string.IsNullOrEmpty(answer.AnalysisResult.ErrorMessage))
                                            {
                                                <span class="badge bg-danger">
                                                    <i class="bi bi-exclamation-triangle me-1"></i>Analiz Hatası
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">
                                                    <i class="bi bi-check-circle me-1"></i>Analiz Edildi
                                                </span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark">
                                                <i class="bi bi-hourglass-split me-1"></i>Analiz Bekleniyor
                                            </span>
                                        }
                                    </div>
                                    <p class="card-text" style="white-space: pre-wrap;">@answer.AnswerText</p>
                                    @if (answer.AnalysisResult != null)
                                    {
                                        <hr>
                                        <div class="analysis-result">
                                            <h6 class="mb-3">
                                                <i class="bi bi-robot me-2"></i>Analiz Sonucu (@answer.AnalysisResult.AiModelUsed)
                                            </h6>
                                            @if (!string.IsNullOrEmpty(answer.AnalysisResult.ErrorMessage))
                                            {
                                                <div class="alert alert-danger small p-2">
                                                    <i class="bi bi-exclamation-triangle me-1"></i>@answer.AnalysisResult.ErrorMessage
                                                </div>
                                            }
                                            else
                                            {
                                                <p class="card-text small mb-2">
                                                    <strong>Özet:</strong> @(answer.AnalysisResult.Summary ?? "N/A")
                                                </p>
                                                @if (answer.AnalysisResult.OverallScore.HasValue)
                                                {
                                                    <p class="card-text small mb-2">
                                                        <strong>Skor:</strong> 
                                                        <span class="badge bg-info">
                                                            @answer.AnalysisResult.OverallScore.Value.ToString("P0")
                                                        </span>
                                                    </p>
                                                }
                                                @if (answer.AnalysisResult.DetectedSkills != null && answer.AnalysisResult.DetectedSkills.Any())
                                                {
                                                    <p class="card-text small mb-2">
                                                        <strong>Tespit Edilenler:</strong>
                                                        <div class="mt-2">
                                                            @foreach (var skill in answer.AnalysisResult.DetectedSkills)
                                                            {
                                                                <span class="badge bg-light text-dark me-1 mb-1">@skill</span>
                                                            }
                                                        </div>
                                                    </p>
                                                }
                                                <a asp-action="ViewAnalysisResult" asp-route-studentAnswerId="@answer.Id" 
                                                   class="btn btn-sm btn-outline-primary mt-2">
                                                    <i class="bi bi-search me-1"></i>Detaylı Analizi Gör
                                                </a>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    @if ((bool)ViewBag.CanSubmitAnswer)
    {
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header bg-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-pencil-square me-2"></i>Yeni Cevabınız
                        </h5>
                    </div>
                    <div class="card-body">
                        <form asp-action="SubmitAnswer" asp-controller="Student" method="post" class="needs-validation" novalidate>
                            <input type="hidden" name="ScenarioId" value="@Model.Scenario.Id" />
                            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                            
                            <div class="mb-3">
                                <label for="AnswerText" class="form-label">Cevabınız</label>
                                <textarea name="AnswerText" id="AnswerText" class="form-control" rows="8" 
                                          placeholder="Senaryoya cevabınızı buraya yazınız..." required minlength="10"></textarea>
                                <div class="invalid-feedback">Lütfen en az 10 karakterlik bir cevap girin.</div>
                            </div>
                            
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-send me-1"></i>Cevabı Gönder ve Analiz Et
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (!Model.StudentAnswers.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-secondary">
                    <i class="bi bi-info-circle me-2"></i>Bu senaryoya şu anda cevap verilemiyor.
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Bootstrap form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}

<style>
    .card {
        border-radius: 1rem;
    }

    .card-header {
        border-bottom: 1px solid rgba(0,0,0,.125);
        padding: 1.5rem;
    }

    .badge {
        font-weight: 500;
        padding: 0.5em 0.8em;
    }

    .btn {
        border-radius: 0.5rem;
    }

    .form-control {
        border-radius: 0.5rem;
    }

    .form-control:focus {
        box-shadow: 0 0 0 0.25rem rgba(13,110,253,.15);
    }

    .analysis-result {
        background-color: rgba(0,0,0,.02);
        border-radius: 0.5rem;
        padding: 1rem;
    }

    .text-muted {
        color: #6c757d!important;
    }
</style> 